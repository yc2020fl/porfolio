
@import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@300&display=swap');

* {
  font-family: Arial, 'Arial Bold';
  box-sizing: border-box;
}

h3 {
  color: rgba(200, 100, 250, .5);
  font-size: 100%;
}

aside h3 {
  font-size: 200%;
}

p {
  color: rgba(250, 250, 100);
}

p[class^="important"] {
  padding: .5rem;
  border: 20px dotted;
  border-color: rgba(160, 200, 250, 50%);
}

li::first-letter{
  font-size: 150%;
  color: rgba(255, 250, 250, 90%);
}


body {
  background-color: rgba(200, 200, 250);
}
.purple-text {
   color: rgba(200, 100, 250, .8);
}
.important {
  font-weight:bold;
}
.important:hover {
  background-color: rgb(160, 200, 250);
}
#lead-paragraph {
  color: purple;
  font-weight: normal;
}
a[href="index.html"] {
  padding: 0.05rem;
  background-color: rgb(160, 200, 250);
}
a[href="secondpage.html"] {
  padding: 0.05rem;
  background-color: rgb(160, 200, 250);
}

a[href="contact-page.html"] {
  padding: 0.05rem;
  background-color: rgb(160, 200, 250);
}

a[href="semantic-elements-lesson-2.html"] {
  padding: 0.05rem;
  background-color: rgb(160, 200, 250);
}
a[href="future-assignment-number-3.html"] {
  padding: 0.05rem;
  background-color: rgb(160, 200, 250);
}
a[href="future-assignment-number-4.html"] {
  padding: 0.05rem;
  background-color: rgb(160, 200, 250);
}

a{
  text-decoration: none;
}

nav a {
  text-decoration: overline;
  color: rgb(250, 250, 250);
}

nav a:visited {
  color: rgba(250, 90, 110, 0.9);
}

h1 {
  color: purple;
  border-style: solid;
  border-width: 15px;
  border-color: rgb(160, 200, 250);
  font-family: 'Open Sans', sans-serif;
}
p.important {
  width: 50%;
}
img {
  border-style: dotted;
  border-width: 5px;
  border-color: rgb(250, 250, 100);
  width: 20%;
}

.front-page {
  background: pink;
  display: flex;
  flex-wrap: nowrap;
  justify-content: space-around;
  flex-direction: row;
  align-items: center;
  border-style: groove;
  border-color: white;
}

article {
  display: flex;
  flex-wrap: nowrap;
  justify-content: flex-start;
  flex-direction: row;
}


article:hover {
  font-size: 115%;
}

article {
  transition-property: font-size;
  transition-duration: 1s;
  transition-timing-function: ease-out;
  transition-delay: 2s;
}

.front-page li:nth-child(3n+1) {
  background-color: rgba(250, 90, 110, 0.4);
}

.fa-tree {
  color: white;
}

.fa-mountain {
  color:grey;
}

input, select, textarea, fieldset {
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  display: block;
  margin: 1.5rem;
}


fieldset {
  border: none;
}

fieldset input {
  display: inline;
}

.checkbox input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

/* customize the labels*/

.checkbox label {
  display: block;
  position: relative;
  padding-left: 2.5em;
  margin-top: 1.2em;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* create a customcheckbox*/
.boxcheckmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 1.6em;
  width: 1.6em;
  background-color: rgba(255, 255, 255, 0.4);
}

/* On mouse-over, add a grey background color */
.checkbox label:hover input ~ .boxcheckmark {
  background-color: rgba(250, 90, 110, 0.4);
}

/* When a checkbox is checked, add a blue background */
.checkbox input:checked ~ .boxcheckmark {
  background-color: rgba(250, 90, 110, 0.6)
}

/* Create the checkmark/indicator (hidden when not checked) */
.boxcheckmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.boxcheckmark:after {
  display: block;
}

/* Style the chackmark/indicator */
.checkbox .boxcheckmark:after {
  left: 9px;
  top: 5px;
  width: 5px;
  height: 10px;
  border: solid rgba(250, 250, 250, 0.6);
  border-width: 0 3px 3px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}







/* Create a custom radio button */
.radiocheckmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 25px;
  width: 25px;
  background-color: rgba(255, 255, 255, 0.4);
  border-radius: 50%;
}

/* On mouse-over, add a grey background color */
.checkbox label:hover input ~ .radiocheckmark {
  background-color: rgba(250, 90, 110, 0.4);
}

/* When a checkbox is checked, add a pink background */
.checkbox input:checked ~ .radiocheckmark {
  background-color: rgba(250, 90, 110, 0.6)
}

/* Create the checkmark/indicator (hidden when not checked) */
.radiocheckmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.radiocheckmark:after {
  display: block;
}

/* Style the chackmark/indicator */
.checkbox .radiocheckmark:after {
  top: 9px;
	left: 9px;
	width: 8px;
	height: 9px;
	border-radius: 50%;
	background: rgba(250, 250, 250, 0.6);
}
